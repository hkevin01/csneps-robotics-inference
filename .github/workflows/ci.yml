name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest black flake8 mypy
        if [ -f src/adapters/python/requirements.txt ]; then pip install -r src/adapters/python/requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src/adapters/python --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src/adapters/python --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Format with black
      run: |
        black --check src/adapters/python

    - name: Type check with mypy
      run: |
        mypy src/adapters/python

    - name: Test with pytest
      run: |
        pytest tests/python/

  test-cpp:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libzmq3-dev libprotobuf-dev protobuf-compiler

    - name: Configure CMake
      run: cmake -B build -S src/adapters/cpp

    - name: Build
      run: cmake --build build --config Release

    - name: Test
      working-directory: build
      run: ctest --output-on-failure

  test-clojure:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'openjdk'
        java-version: '11'

    - name: Install Leiningen
      run: |
        wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
        chmod +x lein
        sudo mv lein /usr/local/bin/

    - name: Run tests
      working-directory: src/csneps-core
      run: |
        lein deps
        lein test

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'

    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: security-scan-results.sarif
